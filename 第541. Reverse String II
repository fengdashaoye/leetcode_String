题目:
Given a string and an integer k, you need to reverse the first k characters for every 2k characters counting from the start of the string. If there are less than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and left the other as original.
Example:
Input: s = "abcdefg", k = 2
Output: "bacdfeg"
思路:首先题目的意思是每隔k隔字符，翻转k个字符，最后如果不够k个了的话，剩几个就翻转几个。
利用StringBuffer的reverse()函数配合String的substring()函数就行
代码:
public class Solution {
    public String reverseStr(String s, int k) {
        if(s == null || s.length() <= 1){
            return s;
        }
        int initial = k;
        StringBuffer content = new StringBuffer();
        StringBuffer temp;
        int i = 0;
        int length = s.length();
        while(i < length){
            if(i + k < length){
                temp = new StringBuffer(s.substring(i, i+k));
                content.append(temp.reverse());
                if(i + 2*k < length){
                    temp = new StringBuffer(s.substring(i+k, i+2*k));
                    content.append(temp);
                    i += 2*k;
                }else{
                    temp = new StringBuffer(s.substring(i+k, length));
                    content.append(temp);
                    break;
                }
            }else{
                temp = new StringBuffer(s.substring(i, length));
                content.append(temp.reverse());
                break;
            }
        }
        return content.toString();
    }
}

就是每2k个字符来遍历原字符串s，然后进行翻转，翻转的结尾位置是取i+k和末尾位置之间的较小值，感觉很叼，参见代码如下
class Solution {
public:
    string reverseStr(string s, int k) {
        for (int i = 0; i < s.size(); i += 2 * k) {
            reverse(s.begin() + i, min(s.begin() + i + k, s.end()));
        }
        return s;
    }
};

Given two binary strings, return their sum (also a binary string).

For example,
a = "11"
b = "1"
Return "100".
思路:
注意String是从左开始的，如"helloworld", 在指定的位置插入都有.insert函数，但是对于String .insert(index,string)，其无法插入char
但是stringbuffer可以，.insert(index,char)
第二int->char时就算0-9不是简单的(char)number,而是char(number+48)

哦，忘了(敲黑板)，stringbuffer有reverse()函数，啊啊啊啊啊

代码:
public class Solution {
    public String addBinary(String a, String b) {
        if(a == null || a.length() <= 0){
            return b;
        }
        if(b == null || b.length() <= 0){
            return a;
        }
        String less = a.length() <= b.length() ? a : b;
        String more = a.length() > b.length() ? a : b;
        StringBuffer content = new StringBuffer();
        int jinwei = 0;
        int i = less.length()-1;
        int j = more.length()-1;
        for(; i >= 0; i--, j--){
            if(jinwei == 0){
                int sum = less.charAt(i) - '0' + more.charAt(j) - '0';
                if(sum <= 1){
                    content.insert(0, (char)(sum + 48));
                }else{
                    if(sum == 2){
                        content.insert(0, '0');
                    }else{
                        content.insert(0, '1');
                    }
                    jinwei = 1;
                }
            }else if(jinwei == 1){
                int sum2 = less.charAt(i) - '0' + more.charAt(j) - '0' + 1;
                if(sum2 <= 1){
                    content.insert(0, (char)(sum2 + 48));
                    jinwei = 0;
                }else{
                    if(sum2 == 2){
                        content.insert(0, '0');
                    }else{
                        content.insert(0, '1');
                    }
                }
                
            }
        }
        for(; j >= 0; j--){
            if(jinwei == 1){
                int sum3 = more.charAt(j) - '0' + 1;
                if(sum3 <= 1){
                    content.insert(0, (char)(sum3 + 48));
                    jinwei = 0;
                }else{
                    if(sum3 == 2){
                        content.insert(0, '0');
                    }else{
                        content.insert(0, '1');
                    }
                }    
            }else{
                content.insert(0, more.charAt(j));
            }
        }
        if(jinwei == 1){
        	content.insert(0, '1');
        }
        return content.toString();
    }
}

别人的代码:
public class Solution {
    public String addBinary(String a, String b) {
        if(a == null || a.isEmpty()) {
            return b;
        }
        if(b == null || b.isEmpty()) {
            return a;
        }
        char[] aArray = a.toCharArray();
        char[] bArray = b.toCharArray();
        StringBuilder stb = new StringBuilder();

        int i = aArray.length - 1;
        int j = bArray.length - 1;
        int aByte;
        int bByte;
        int carry = 0;
        int result;

        while(i > -1 || j > -1 || carry == 1) {
            aByte = (i > -1) ? Character.getNumericValue(aArray[i--]) : 0;
            bByte = (j > -1) ? Character.getNumericValue(bArray[j--]) : 0;
            result = aByte ^ bByte ^ carry;
            carry = ((aByte + bByte + carry) >= 2) ? 1 : 0;
            stb.append(result);
        }
        return stb.reverse().toString();
    }
}



题目:
Count the number of segments in a string, where a segment is defined to be a contiguous sequence of non-space characters.

Please note that the string does not contain any non-printable characters.

Example:

Input: "Hello, my name is John"
Output: 5
题目很简单，想到了string.split()，但是对于但空格或者多空格，做法是str.split("\\s+");
除此以外，如果开头为空格，其会多1，如果全为空格，最终的length为1，需要用一些边界条件规避掉。
代码:
public class Solution {
    public int countSegments(String s) {
        if(s == null || s.length() <= 0){
            return 0;
        }
        if(s.charAt(0) == ' '){
            int i = 0;
            for(; i < s.length(); i++){
                if(s.charAt(i) != ' '){
                    break;
                }
            }
            if(i == s.length()){
                return 0;
            }
            return s.substring(i, s.length()).split("\\s+").length;
        }
        String[] content = s.split("\\s+");
        return content.length;
    }
}
这是别人的做法
count only the start of each new word
public class Solution {
    public int countSegments(String s) {
        int counter = 0;
        for (int i=0; i<s.length(); i++) {
            if (s.charAt(i)!=' ' && (i==0 || s.charAt(i-1)==' ')) {//只计算单词开头，i不为空格且i-1为空格，此为单词开头，
                counter++;                                         //又或者i==0且i不为空格，此为第一个字母
            }
        }
        return counter;
    }
}
